CONSULTA 1: Devuelve un listado con los empleados y los datos de los departamentos donde trabaja cada uno.
SELECT * FROM EMPLEADO INNER JOIN DEPARTAMENTO ON EMPLEADO.CODIGO_DEPARTAMENTO = DEPARTAMENTO.CODIGO;

CONSULTA 2: Devuelve un listado con los empleados y los datos de los departamentos donde trabaja cada uno.
Ordena alfabeticamente el resultado de la consulta, en primer lugar por el nombre del departamento y en segundo lugar por los apellidos (los dos) y el nombre de los empleados.
SELECT * FROM EMPLEADO INNER JOIN DEPARTAMENTO ON EMPLEADO.CODIGO_DEPARTAMENTO = DEPARTAMENTO.CODIGO
ORDER BY DEPARTAMENTO.NOMBRE, EMPLEADO.APELLIDO1, EMPLEADO.APELLIDO2, EMPLEADO.NOMBRE ASC;

CONSULTA 3: Devuelve un listado con el código y el nombre del departamento, solamente de aquellos departamentos que SI tienen empleados.
SELECT DISTINCT DEPARTAMENTO.CODIGO, DEPARTAMENTO.NOMBRE FROM EMPLEADO INNER JOIN DEPARTAMENTO ON EMPLEADO.CODIGO_DEPARTAMENTO = DEPARTAMENTO.CODIGO;

CONSULTA 4: Devuelve un listado con el código, el nombre del departamento y el valor del presupuesto actual del que dispone, solamente de aquellos departamentos que tienen empleados.
El valor del presupuesto actual lo puede calcular restando al valor del presupuesto inicial (columna presupuesto) el valor de los gastos que ha generado (columna gastos).
SELECT DISTINCT DEPARTAMENTO.CODIGO, DEPARTAMENTO.NOMBRE, DEPARTAMENTO.PRESUPUESTO - DEPARTAMENTO.GASTOS AS "PRESUPUESTO ACTUAL" 
FROM DEPARTAMENTO INNER JOIN EMPLEADO ON DEPARTAMENTO.CODIGO = EMPLEADO.CODIGO_DEPARTAMENTO;

CONSULTA 5: Devuelve el nombre del departamento donde trabaja el empleado que tiene el nif 38382980M.
SELECT DEPARTAMENTO.NOMBRE FROM DEPARTAMENTO INNER JOIN EMPLEADO ON DEPARTAMENTO.CODIGO = EMPLEADO.CODIGO_DEPARTAMENTO WHERE EMPLEADO.NIF = "38382980M";

CONSULTA 6: Devuelve el nombre del departamento donde trabaja el empleado Pepe Ruiz Santana.
SELECT DEPARTAMENTO.NOMBRE FROM DEPARTAMENTO INNER JOIN EMPLEADO ON DEPARTAMENTO.CODIGO = EMPLEADO.CODIGO_DEPARTAMENTO 
WHERE EMPLEADO.NOMBRE = "PEPE" AND APELLIDO1 = "RUIZ" AND APELLIDO2 = "SANTANA";

CONSULTA 7: Devuelve un listado con los datos de los empleados que trabajan en el departamento de I+D. Ordena el resultado alfabéticamente.
SELECT EMPLEADO.* FROM EMPLEADO INNER JOIN DEPARTAMENTO ON DEPARTAMENTO.CODIGO = EMPLEADO.CODIGO_DEPARTAMENTO 
WHERE DEPARTAMENTO.NOMBRE = "I+D" ORDER BY APELLIDO1, APELLIDO2, NOMBRE ASC;

CONSULTA 8: Devuelve un listado con los datos de los empleados que trabajan en el departamento de Sistemas, Contabilidad o I+D. Ordena el resultado alfabéticamente.
SELECT EMPLEADO.* FROM EMPLEADO INNER JOIN DEPARTAMENTO ON DEPARTAMENTO.CODIGO = EMPLEADO.CODIGO_DEPARTAMENTO 
WHERE DEPARTAMENTO.NOMBRE = "I+D" || DEPARTAMENTO.NOMBRE = "SISTEMAS" || DEPARTAMENTO.NOMBRE = "CONTABILIDAD" ORDER BY APELLIDO1, APELLIDO2, NOMBRE ASC;

CONSULTA 9: Devuelve una lista con el nombre de los empleados que tienen los departamentos que no tienen un presupuesto entre 100000 y 200000 euros.
SELECT EMPLEADO.NOMBRE FROM EMPLEADO INNER JOIN DEPARTAMENTO ON DEPARTAMENTO.CODIGO = EMPLEADO.CODIGO_DEPARTAMENTO 
WHERE DEPARTAMENTO.PRESUPUESTO NOT BETWEEN 100000 AND 200000;

CONSULTA 10: Devuelve un listado con el nombre de los departamentos donde existe algún empleado cuyo segundo apellido sea NULL. Tenga en cuenta que NO debe mostrar nombres de departamentos que estén repetidos.
SELECT DISTINCT DEPARTAMENTO.NOMBRE FROM DEPARTAMENTO INNER JOIN EMPLEADO ON DEPARTAMENTO.CODIGO = EMPLEADO.CODIGO_DEPARTAMENTO WHERE EMPLEADO.APELLIDO2 IS NULL;

SELECT DISTINCT EMPLEADO.NOMBRE AS "NOMBRE EMPLEADO", DEPARTAMENTO.NOMBRE AS "NOMBRE DEPARTAMENTO" FROM EMPLEADO RIGHT JOIN DEPARTAMENTO 
ON EMPLEADO.CODIGO_DEPARTAMENTO = DEPARTAMENTO.CODIGO WHERE EMPLEADO.CODIGO_DEPARTAMENTO IS NULL;
-> Saca el nombre de la tabla empleado y el nombre del departamento de la tabla departamento donde codigo_departamento es NULL, es decir, los que no tienen trabajadores.