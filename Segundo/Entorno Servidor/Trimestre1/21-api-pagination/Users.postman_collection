{
	"info": {
		"_postman_id": "6240b960-ade8-4787-8b98-ec0aba981746",
		"name": "Pruebas",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31187331"
	},
	"item": [
		{
			"name": "POST Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Capture and store token in environment variable', function () {\r",
							"    // Extraer el token de la respuesta\r",
							"    const responseBody = pm.response.json();\r",
							"    const accessToken = responseBody.accessToken; // Ajusta esto seg√∫n la estructura de tu respuesta\r",
							"\r",
							"    // Almacenar el token en la variable de entorno\r",
							"    postman.setEnvironmentVariable('token', accessToken);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin@admin.com\",\r\n    \"password\": \"patatadeadmin\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Users paginated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/users?page=2&pageSize=20&sort=name",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						},
						{
							"key": "pageSize",
							"value": "20"
						},
						{
							"key": "sort",
							"value": "name"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Users order by edad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/users?sort=age",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "sort",
							"value": "age"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Users order by nombre y edad = 21",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/users?sort=name&age=21",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "sort",
							"value": "name"
						},
						{
							"key": "age",
							"value": "21"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 201', function() {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"\r",
							"pm.test('Name is Pau', function() {\r",
							"    const requestBody = JSON.parse(pm.request.body.raw);\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.body.name).to.eql(requestBody.name);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"user11\",\r\n    \"name\": \"Pau\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('ID is user11', function() {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.user.id).to.eql('user11');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/users/user11",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"user11"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Age is 22', function() {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.body.age).to.eql(22);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"user11\",\r\n    \"age\": 22\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/user11",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"user11"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT User",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"user11\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/user11",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"user11"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Deleted user11', function() {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.body.id).to.eql('user11');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/users/user11",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"user11"
					]
				}
			},
			"response": []
		}
	]
}