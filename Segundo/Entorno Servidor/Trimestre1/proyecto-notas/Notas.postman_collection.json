{
	"info": {
		"_postman_id": "b2b035cc-55e8-4ff3-993a-cb43c78c926d",
		"name": "Notas",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31187331"
	},
	"item": [
		{
			"name": "POST Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Capture and store token in environment variable', function () {\r",
							"    // Extraer el token de la respuesta\r",
							"    const responseBody = pm.response.json();\r",
							"    const accessToken = responseBody.accessToken; // Ajusta esto seg√∫n la estructura de tu respuesta\r",
							"\r",
							"    // Almacenar el token en la variable de entorno\r",
							"    postman.setEnvironmentVariable('token', accessToken);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin@admin.com\",\r\n    \"password\": \"patatadeadmin\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:4000/notes?noteName=not",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"notes"
					],
					"query": [
						{
							"key": "noteName",
							"value": "not"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET filter Notes by names",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:4000/notes?noteName=not",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"notes"
					],
					"query": [
						{
							"key": "noteName",
							"value": "not"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Notes order by names",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:4000/notes?sort=-name",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"notes"
					],
					"query": [
						{
							"key": "sort",
							"value": "-name"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Notes order by size",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:4000/notes?sort=size",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"notes"
					],
					"query": [
						{
							"key": "sort",
							"value": "size"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Notes pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:4000/notes?pageSize=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"notes"
					],
					"query": [
						{
							"key": "pageSize",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 201', function() {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"\r",
							"pm.test('Name is prueba', function() {\r",
							"    const requestBody = JSON.parse(pm.request.body.raw);\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.name).to.eql(requestBody.name+'.note');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"notita\",\r\n    \"content\": \"jelouuuuuuuuuu\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:4000/notes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('ID is prueba', function() {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.noteName).to.eql('prueba.note');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:4000/notes/prueba",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"notes",
						"prueba"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH Note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Content is Seguimos con la prueba. Esto es un patch', function() {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.content).to.eql('Seguimos con la prueba. Esto es un patch');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": \"Seguimos con la prueba. Esto es un patch\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:4000/notes/notita",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"notes",
						"notita"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Content is prueba de put', function() {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.content).to.eql('prueba de put');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": \"prueba de put\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:4000/notes/prueba?password=patata&Authorization=Bearer {{token}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"notes",
						"prueba"
					],
					"query": [
						{
							"key": "password",
							"value": "patata"
						},
						{
							"key": "Authorization",
							"value": "Bearer {{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Deleted prueba.note', function() {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.noteName).to.eql('prueba.note');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "password",
						"value": "patata",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:4000/notes/prueba?password=patata&Authorization=Bearer {{token}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"notes",
						"prueba"
					],
					"query": [
						{
							"key": "password",
							"value": "patata"
						},
						{
							"key": "Authorization",
							"value": "Bearer {{token}}"
						}
					]
				}
			},
			"response": []
		}
	]
}