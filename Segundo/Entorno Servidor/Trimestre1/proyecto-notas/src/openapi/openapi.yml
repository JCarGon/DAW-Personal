openapi: 3.1.0
info:
  version: "1.0.0"
  title: "Notes API"
paths:
  /login:
    post:
      summary: "Get Token"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                username:
                  type: "string"
                password:
                  type: "string"
            example:
              username: "user@user.com"
              password: "1234"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  accessToken:
                    type: "string"
                    example: "ey..."
                  expiresIn:
                    type: "integer"
                    example: 300
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 401
                  error:
                    type: "string"
                    example: "Unauthorized"
                  message:
                    type: "string"
                    example: "User not found in the application"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 500
                  error:
                    type: "string"
                    example: "Internal server error"
      security: []

  /notes:
    get:
      summary: "Get notes"
      parameters:
        - in: "header"
          name: "password"
          description: "Password (required)"
          required: true
          example: "word"
          schema:
            type: "string"
        - in: "query"
          name: "sort"
          description: "Order by (optional)"
          schema:
            type: "string"
        - in: "query"
          name: "page"
          description: "Page number (optional)"
          schema:
            type: "integer"
        - in: "query"
          name: "pageSize"
          description: "Page size (optional)"
          schema:
            type: "integer"
        - in: "query"
          name: "noteName"
          description: "Full or part note name (optional)"
          schema:
            type: "string"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 200
                  page:
                    type: "integer"
                    example: 1
                  pageSize:
                    type: "integer"
                    example: 1
                  totalItems:
                    type: "integer"
                    example: 1
                  notesList:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        name:
                          type: "string"
                          example: 200
                        creationDate:
                          type: "string"
                          format: "date-time"
                        lastModifiedDate:
                          type: "string"
                          format: "date-time"
                        size:
                          type: "integer"
                          example: 10
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 500
                  error:
                    type: "string"
                    example: "Internal server error"
      security: []

    post:
      summary: "Create new note"
      parameters:
        - in: "header"
          name: "password"
          description: "Password (required)"
          required: true
          example: "word"
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: "string"
                content:
                  type: "string"
            example:
              name: "noteName"
              content: "Note content"
      responses:
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 201
                  message:
                    type: "string"
                    example: "Note created correctly"
                  name:
                    type: "string"
                    example: "noteName"
                  content:
                    type: "string"
                    example: "noteContent"
        '400':
          description: "Bad request"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 400
                  error:
                    type: "string"
                    example: "Bad request"
                  message:
                    type: "string"
                    example: "Name property is required"
                  body:
                    type: "object"
                    properties:
                      name:
                        type: "string"
                        example: ""
                      content:
                        type: "string"
                        example: "noteContent"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 403
                  error:
                    type: "string"
                    example: "Forbidden"
                  message:
                    type: "string"
                    example: "Token expired"
        '409':
          description: "Conflict"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 409
                  error:
                    type: "string"
                    example: "Conflict"
                  message:
                    type: "string"
                    example: "This noteName already exists"
                  body:
                    type: "object"
                    properties:
                      name:
                        type: "string"
                        example: "noteName"
                      content:
                        type: "string"
                        example: "noteContent"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 500
                  error:
                    type: "string"
                    example: "Internal server error"
      security:
        - bearerAuth: []

  /notes/{name}:
    get:
      summary: "Get note"
      parameters:
        - in: "header"
          name: "password"
          description: "Password (required)"
          required: true
          example: "word"
          schema:
            type: "string"
        - in: "path"
          name: "name"
          description: "noteName"
          required: true
          example: "noteName"
          schema:
            type: "string"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 200
                  message:
                    type: "string"
                    example: "Note found"
                  noteName:
                    type: "string"
                    example: "noteName"
                  creationDate:
                    type: "string"
                    format: "date-time"
                  lastModifiedDate:
                    type: "string"
                    format: "date-time"
                  size:
                    type: "integer"
                    example: 10
                  content:
                    type: "string"
                    example: "noteContent"
        '404':
          description: "Not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 404
                  message:
                    type: "string"
                    example: "Note not found"
                  noteName:
                    type: "string"
                    example: "noteName"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 500
                  error:
                    type: "string"
                    error: "Internal server error"
      security: []

    patch:
      summary: "Edit an existing note"
      parameters:
        - in: "header"
          name: "password"
          description: "Password (required)"
          required: true
          example: "word"
          schema:
            type: "string"
        - in: "path"
          name: "name"
          description: "noteName"
          required: true
          example: "noteName"
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            example:
              content: "New note content"
            schema:
              type: "object"
              properties:
                content:
                  type: "string"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 200
                  message:
                    type: "string"
                    example: "Note noteName.note edited"
                  noteName:
                    type: "string"
                    example: "noteName"
                  addContent:
                    type: "string"
                    example: "NoteContent"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 403
                  error:
                    type: "string"
                    example: "Forbidden"
                  message:
                    type: "string"
                    example: "Token expired"
        '404':
          description: "Not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 404
                  message:
                    type: "string"
                    example: "Note not found"
                  noteName:
                    type: "string"
                    example: "noteName"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 500
                  error:
                    type: "string"
                    example: "Internal server error"

    put:
      summary: "Edit an existing note"
      parameters:
        - in: "header"
          name: "password"
          description: "Password (required)"
          required: true
          example: "word"
          schema:
            type: "string"
        - in: "path"
          name: "name"
          description: "noteName"
          required: true
          example: "noteName"
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            example:
              content: "New note content"
            schema:
              type: "object"
              properties:
                content:
                  type: "string"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 200
                  message:
                    type: "string"
                    example: "Note noteName.note edited"
                  noteName:
                    type: "string"
                    example: "noteName"
                  content:
                    type: "string"
                    example: "noteContent"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 403
                  error:
                    type: "string"
                    example: "Forbidden"
                  message:
                    type: "string"
                    example: "Token expired"
        '404':
          description: "Not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 404
                  message:
                    type: "string"
                    example: "Note not found"
                  noteName:
                    type: "string"
                    example: "noteName"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 500
                  error:
                    type: "string"
                    example: "Internal server error"

    delete:
      summary: "Delete an existing note"
      parameters:
        - in: "header"
          name: "password"
          description: "Password (required)"
          required: true
          example: "word"
          schema:
            type: "string"
        - in: "path"
          name: "name"
          description: "noteName"
          required: true
          example: "noteName"
          schema:
            type: "string"
      responses:
        '200':
          description: "Note"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 200
                  message:
                    type: "string"
                    example: "Nota eliminada"
                  noteName:
                    type: "string"
                    example: "noteName"
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 403
                  error:
                    type: "string"
                    example: "Forbidden"
                  message:
                    type: "string"
                    example: "Token expired"
        '404':
          description: "Not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 404
                  message:
                    type: "string"
                    example: "Note not found"
                  noteName:
                    type: "string"
                    example: "noteName"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "integer"
                    example: 500
                  error:
                    type: "string"
                    example: "Internal Server Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
